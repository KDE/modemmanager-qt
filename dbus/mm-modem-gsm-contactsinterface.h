/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -m -p mm-modem-gsm-contactsinterface /home/ilia/libnm-qt/solid/modemmanager-0.4/dbus/introspection/mm-modem-gsm-contacts.xml
 *
 * qdbusxml2cpp is Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef MM_MODEM_GSM_CONTACTSINTERFACE_H
#define MM_MODEM_GSM_CONTACTSINTERFACE_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>
#include "generic-types.h"

/*
 * Proxy class for interface org.freedesktop.ModemManager.Modem.Gsm.Contacts
 */
class OrgFreedesktopModemManagerModemGsmContactsInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.freedesktop.ModemManager.Modem.Gsm.Contacts"; }

public:
    OrgFreedesktopModemManagerModemGsmContactsInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~OrgFreedesktopModemManagerModemGsmContactsInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<uint> Add(const QString &name, const QString &number)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(name) << qVariantFromValue(number);
        return asyncCallWithArgumentList(QLatin1String("Add"), argumentList);
    }

    inline QDBusPendingReply<> Delete(uint index)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(index);
        return asyncCallWithArgumentList(QLatin1String("Delete"), argumentList);
    }

    inline QDBusPendingReply<ModemManager::ModemGsmContactsInterface::ContactTypeList> Find(const QString &pattern)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(pattern);
        return asyncCallWithArgumentList(QLatin1String("Find"), argumentList);
    }

    inline QDBusPendingReply<ModemManager::ModemGsmContactsInterface::ContactType> Get(uint index)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(index);
        return asyncCallWithArgumentList(QLatin1String("Get"), argumentList);
    }

    inline QDBusPendingReply<uint> GetCount()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("GetCount"), argumentList);
    }

    inline QDBusPendingReply<ModemManager::ModemGsmContactsInterface::ContactTypeList> List()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("List"), argumentList);
    }

Q_SIGNALS: // SIGNALS
};

#endif
