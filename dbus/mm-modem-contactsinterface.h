/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -m introspection/org.freedesktop.ModemManager1.Modem.Contacts.xml -p mm-modem-contactsinterface
 *
 * qdbusxml2cpp is Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef MM-MODEM-CONTACTSINTERFACE_H_1370342180
#define MM-MODEM-CONTACTSINTERFACE_H_1370342180

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface org.freedesktop.ModemManager1.Modem.Contacts
 */
class OrgFreedesktopModemManager1ModemContactsInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.freedesktop.ModemManager1.Modem.Contacts"; }

public:
    OrgFreedesktopModemManager1ModemContactsInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~OrgFreedesktopModemManager1ModemContactsInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<uint> Add(const QVariantMap &properties)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(properties);
        return asyncCallWithArgumentList(QLatin1String("Add"), argumentList);
    }

    inline QDBusPendingReply<> Delete(uint index)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(index);
        return asyncCallWithArgumentList(QLatin1String("Delete"), argumentList);
    }

    inline QDBusPendingReply<QVariantMapList> Find(const QString &pattern)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(pattern);
        return asyncCallWithArgumentList(QLatin1String("Find"), argumentList);
    }

    inline QDBusPendingReply<QVariantMap> Get(uint index)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(index);
        return asyncCallWithArgumentList(QLatin1String("Get"), argumentList);
    }

    inline QDBusPendingReply<uint> GetCount()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("GetCount"), argumentList);
    }

    inline QDBusPendingReply<QVariantMapList> List()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("List"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void Added(uint index, const QVariantMap &properties);
    void Deleted(uint index);
};

namespace org {
  namespace freedesktop {
    namespace ModemManager1 {
      namespace Modem {
        typedef ::OrgFreedesktopModemManager1ModemContactsInterface Contacts;
      }
    }
  }
}
#endif
