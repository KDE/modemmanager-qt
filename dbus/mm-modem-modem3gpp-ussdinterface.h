/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -m introspection/org.freedesktop.ModemManager1.Modem.Modem3gpp.Ussd.xml -p mm-modem-modem3gpp-ussdinterface
 *
 * qdbusxml2cpp is Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef MM-MODEM-MODEM3GPP-USSDINTERFACE_H_1370342295
#define MM-MODEM-MODEM3GPP-USSDINTERFACE_H_1370342295

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface org.freedesktop.ModemManager1.Modem.Modem3gpp.Ussd
 */
class OrgFreedesktopModemManager1ModemModem3gppUssdInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.freedesktop.ModemManager1.Modem.Modem3gpp.Ussd"; }

public:
    OrgFreedesktopModemManager1ModemModem3gppUssdInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~OrgFreedesktopModemManager1ModemModem3gppUssdInterface();

    Q_PROPERTY(QString NetworkNotification READ networkNotification)
    inline QString networkNotification() const
    { return qvariant_cast< QString >(property("NetworkNotification")); }

    Q_PROPERTY(QString NetworkRequest READ networkRequest)
    inline QString networkRequest() const
    { return qvariant_cast< QString >(property("NetworkRequest")); }

    Q_PROPERTY(uint State READ state)
    inline uint state() const
    { return qvariant_cast< uint >(property("State")); }

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<> Cancel()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("Cancel"), argumentList);
    }

    inline QDBusPendingReply<QString> Initiate(const QString &command)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(command);
        return asyncCallWithArgumentList(QLatin1String("Initiate"), argumentList);
    }

    inline QDBusPendingReply<QString> Respond(const QString &response)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(response);
        return asyncCallWithArgumentList(QLatin1String("Respond"), argumentList);
    }

Q_SIGNALS: // SIGNALS
};

namespace org {
  namespace freedesktop {
    namespace ModemManager1 {
      namespace Modem {
        namespace Modem3gpp {
          typedef ::OrgFreedesktopModemManager1ModemModem3gppUssdInterface Ussd;
        }
      }
    }
  }
}
#endif
